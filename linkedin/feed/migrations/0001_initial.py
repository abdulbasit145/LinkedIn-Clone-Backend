# Generated by Django 4.2.8 on 2023-12-26 17:24

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("core", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Comment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("text", models.TextField()),
                (
                    "comment_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.userprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment",
                "verbose_name_plural": "Comments",
            },
        ),
        migrations.CreateModel(
            name="CommentReply",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("text", models.TextField()),
                (
                    "media",
                    models.ImageField(
                        blank=True, null=True, upload_to="Comments/Media/"
                    ),
                ),
                (
                    "comment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="feed.comment"
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment Reply",
                "verbose_name_plural": "Comment Replies",
            },
        ),
        migrations.CreateModel(
            name="Post",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("text_body", models.TextField(max_length=500)),
                (
                    "media",
                    models.ImageField(blank=True, null=True, upload_to="Posts/Media/"),
                ),
                ("edited", models.BooleanField(blank=True, default=False, null=True)),
                (
                    "commented_by",
                    models.ManyToManyField(
                        related_name="commented_posts",
                        through="feed.Comment",
                        to="core.userprofile",
                    ),
                ),
                (
                    "parent_post",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="feed.post",
                    ),
                ),
                (
                    "post_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="posts",
                        to="core.userprofile",
                    ),
                ),
            ],
            options={
                "verbose_name": "post",
                "verbose_name_plural": "posts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ReactionType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("like", "Like"),
                            ("celebrate", "Celebrate"),
                            ("support", "Support"),
                            ("love", "Love"),
                            ("funny", "Funny"),
                            ("insightful", "Insightful"),
                        ],
                        default=None,
                        max_length=12,
                    ),
                ),
            ],
            options={
                "verbose_name": "Reaction Type",
                "verbose_name_plural": "Reaction Types",
            },
        ),
        migrations.CreateModel(
            name="ReplyReaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "comment_reply",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="feed.commentreply",
                    ),
                ),
                (
                    "reaction_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.userprofile",
                    ),
                ),
                (
                    "reaction_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="feed.reactiontype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Reply Reaction",
                "verbose_name_plural": "Reply Reactions",
                "unique_together": {("comment_reply", "reaction_owner")},
            },
        ),
        migrations.CreateModel(
            name="PostReaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="feed.post"
                    ),
                ),
                (
                    "reaction_by",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post_reactions",
                        to="core.userprofile",
                    ),
                ),
                (
                    "reaction_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="feed.reactiontype",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="post",
            name="reacted_by",
            field=models.ManyToManyField(
                related_name="reacted_posts",
                through="feed.PostReaction",
                to="core.userprofile",
            ),
        ),
        migrations.CreateModel(
            name="Notification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("message", models.CharField(max_length=255)),
                (
                    "post",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="post_notifications",
                        to="feed.post",
                    ),
                ),
                (
                    "recipient",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="notifications",
                        to="core.userprofile",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="HashTag",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("topic", models.CharField(max_length=100)),
                (
                    "associated_posts",
                    models.ManyToManyField(related_name="hashtags", to="feed.post"),
                ),
                (
                    "followed_by",
                    models.ManyToManyField(
                        related_name="followed_hashtags", to="core.userprofile"
                    ),
                ),
            ],
            options={
                "verbose_name": "Hashtag",
                "verbose_name_plural": "Hashtags",
            },
        ),
        migrations.AddField(
            model_name="commentreply",
            name="reacted_by",
            field=models.ManyToManyField(
                related_name="reacted_replies",
                through="feed.ReplyReaction",
                to="core.userprofile",
            ),
        ),
        migrations.AddField(
            model_name="commentreply",
            name="reply_owner",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="core.userprofile"
            ),
        ),
        migrations.CreateModel(
            name="CommentReaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "comment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="feed.comment"
                    ),
                ),
                (
                    "reaction_owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.userprofile",
                    ),
                ),
                (
                    "reaction_type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="feed.reactiontype",
                    ),
                ),
            ],
            options={
                "verbose_name": "Comment Reaction",
                "verbose_name_plural": "Comment Reactions",
                "unique_together": {("comment", "reaction_owner")},
            },
        ),
        migrations.AddField(
            model_name="comment",
            name="post",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE, to="feed.post"
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="reacted_by",
            field=models.ManyToManyField(
                related_name="reacted_comments",
                through="feed.CommentReaction",
                to="core.userprofile",
            ),
        ),
        migrations.AddField(
            model_name="comment",
            name="replied_by",
            field=models.ManyToManyField(
                related_name="replied_comments",
                through="feed.CommentReply",
                to="core.userprofile",
            ),
        ),
    ]
